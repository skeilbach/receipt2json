name: Formatting Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  formatting-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Define the Python version
        python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Cache the uv global cache directory for faster subsequent runs
      - name: Cache uv directory
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          # Create a cache key based on OS, Python version, and crucially,
          # the hash of your pyproject.toml (and uv.lock if you commit it).
          # If these files change, the cache is invalidated.
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-uv-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/uv.lock') }}
          # Fallback keys if the exact hash doesn't match
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-uv-

      # Install uv itself using pip, then use uv to install project dependencies
      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip uv # Install/upgrade pip and install uv
          # Install dependencies from pyproject.toml using uv
          uv pip install ".[format]"

      # Run formatting and linting tools
      - name: Check import sorting with isort
        run: |
          isort . --check-only --diff

      - name: Check formatting with black
        run: |
          black . --check --diff

      - name: Lint with flake8
        run: |
          flake8 . --count --show-source --statistics
